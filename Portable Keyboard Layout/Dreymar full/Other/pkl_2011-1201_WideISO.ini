[pkl]

; The layout ini file is "layouts/[key value]/layout.ini"
; You can use multiple layouts, if you write for instance:
; 	layout = layout1:Displayed name,layout2
;layout = prolemak_hu:Hungarian Prolemak,prolemak_en:English Prolemak

;  Portable setup (Scand.): Start in Wide/Ergo Colemak; switch to 'neutral' extended
;layout = colemak_Wide(1b)ISO:Colemak-Wide(ISO)-No,extend_qwertyNo:Extend(Caps)QWERTY(Scand)
layout = colemak_Wide(35)ISO:Colemak-Wide(ISO)-No,extend_qwertyNo:Extend(Caps)QWERTY(Scand)
;  Portable setup (Scand.): Start in 'neutral' extended; switch to Wide/Ergo Colemak
;layout = extend_qwertyNo:Extend(Caps)QWERTY(Scand),colemak_Wide(1b)ISO:Colemak-Wide(ISO)-No

;  Registry remapped WideISO setup: Start in Colemak; switch to 'neutral'
;layout = colemak_GNo:Colemak-G(No),extend_qwertyNo:Extend(Caps)QWERTY(Scand)
;  Registry remapped WideISO setup: Start in 'neutral'; switch to Colemak
;layout = extend_qwertyNo:Extend(Caps)QWERTY(Scand),colemak_GNo:Colemak-G(No)

;  Portable setup (Scandinavian): Start in Comfort Colemak; switch to 'neutral' extended
;layout = colemak_GNoComf:Colemak-G(No)Comf,extend_qwertyNo:Extend(Caps)QWERTY(Scand)
;  Portable setup (Scandinavian): Start in 'neutral' extended; switch to Comfort Colemak
;layout = extend_qwertyNo:Extend(Caps)QWERTY(Scand),colemak_GNoComf:Colemak-G(No)Comf

;  Farkas setup: Start with 'virtualkeys' US mode
;layout = extend_colemak:Extend(Caps)Colemak

; Display help images on startup
displayHelpImage = no

; Toggle the help images on/off
; http://www.autohotkey.com/docs/Hotkeys.htm#Symbols
displayHelpImageHotkey = ^+1

; With this hotkey you can switch between layouts
;changeLayoutHotkey = LAlt & LShift
changeLayoutHotkey = ^+2

; The original mode for non-ASCII characters may not work with 
; all programs (for example GTK applications, like Klavaro or Pidgin)
; so you can try alternative modes with this hotkey.
; If you have found the best mode, you can write it into the 
; nonASCII.ini; and please send it to me as well!
changeNonASCIIMode = ^+3

; Exit from the application
; http://www.autohotkey.com/docs/Hotkeys.htm#Symbols
exitAppHotkey = ^+4

; Suspend (disable/enable) the application.
; http://www.autohotkey.com/docs/Hotkeys.htm#Symbols
;suspendHotkey = LAlt & RAlt,RAlt & LAlt
;suspendHotkey = LCtrl & RCtrl,RCtrl & LCtrl
;suspendHotkey = LCtrl & SC029
suspendHotkey = ^+SC029

; If your original layout has deadkeys, put them here;
; (For example on the Hungarian keyboard '^' is a dead key, 
; so if I would like to type a '^', I must type '^' then 'Space'.)
; If you write "auto", PKL will hopefully use the correct mode (if someone sent it to me)
;systemsDeadkeys = auto
systemsDeadkeys = `~^¨´

; A file name in the Languages folder (without .ini). If it is 'auto',
; the language definitions are loaded from the system's default locale
; (http://www.autohotkey.com/docs/misc/Languages.htm)
language = auto

; Compact mode: every external file is in the same folder as pkl.exe
compactMode = no

; Windows internally translates the AltGr (right Alt) key to LEFT Ctrl + RIGHT Alt
; If you enable this option, PKL detect AltGr as (one of) Ctrl + (one of) Alt.
; (this is useful for notebook keyboards that do not have a right alt or AltGr key.)
; It is not recommend, because fortunately many programs know the
; difference between the AltGr and the Alt+Ctrl
altGrEqualsAltCtrl = no

; If you often forget to exit PKL at a shared computer, you can set a 
; suspend timeout in minutes: after this time of inactivity (with no 
; keypresses) PKL will suspend itself. The exit timeout is similar: after
; this time is spent suspended PKL will shut down.
; For example if you use suspend=5, exit=30, then after 5 minutes of 
; inactivity PKL suspends; if you are there, you can go live again. If you 
; forgot to disable PKL and left, after 5 minutes your friend would not find it out.
; After 30 minutes in suspension, PKL would then exit.
; You can disable these features by setting the timeouts to 0.
; Important: only "coming out from suspend" counts as an activity for exitTimeOut, 
; so if you write 0 to suspend and 30 to exit, it will exit after 30 
; minutes, even if you type or press other keys.
suspendTimeOut = 0
exitTimeOut = 0

; If it is yes/true/1, pkl will go suspend when it starts.
; (Yes, I know the helper image is appearing and hiding.)
; I think the better way is start PKL when you need it.
startsInSuspendMode = no

; *** Commentaries for the PKL [extend] section(s) below ***
; These keys are modified/transposed by holding down the 'extend key' (CapsLock by default):
;+------+------+------+------+------+------+------+------+------+------+------+------+------+
;|Esc + |F1 <> |F2 << |F3 >> |F4 <> |F5 <> |F6 << |F7 >> |F8 <> |F9 <> |F10<> |F11<> |F12<> |
;| Caps | Play | Prev | Next | Stop | Mute | Vol- | Vol+ | Media| BrHom| Mail | App1 | App2 |
;+======+======+======+======+======+======+======+======+======+======+======+======+======+
;|` ¤¤¤ |1     |2     |3     |4     |5     |6     |7     |8     |9     |0     |-     |=     |
;| Del  | F1   | F2   | F3   | F4   | F5   | F6   | F7   | F8   | F9   | F10  | F11  | F12  |
;+------+------+------+------+------+------+------+------+------+------+------+------+------+
;|Tab   |Q ¤¤¤ |W *** |F <<> |P <>> |G *** |J ### |L ### |U ### |Y ### |; ¤¤¤ |[ ¤¤¤ |] ¤¤¤ |
;|      | Esc  | *WhUp| BrBck| BrFwd| *Btn1| PgUp | Home | Up   | End  | Del  | Esc  | Ins  |
;+------+------+------+------+------+------+------+------+------+------+------+------+------+
;|Caps+ |A +++ |R *** |S +++ |T +++ |D *** |H ### |N ### |E ### |I ### |O ¤¤¤ |' ¤¤¤ |\ ><> |
;| ++++ | Alt  | *WhDn| Shift| Ctrl | *Up17| PgDn | Left | Down | Right| Back | Apps | BrFav|
;+------+------+------+------+------+------+------+------+------+------+------+------+------+
;|Z ¤¤¤ |X === |C === |V === |B *** |_ *** |K *** |M *** |, *** |. *** |/ *** |Spc ¤ |Entr¤ |
;| Undo | Cut  | Copy | Paste| *Le17| *Dn17| *Ri17| *Btn3| *WhLe| *WhRi| *Btn2| Enter| Break|
;+------+------+------+------+------+------+------+------+------+------+------+-------------+
;Legend: # Movement; + Modifiers; = GUI edit; * Mouse; <> MultiMedia; ¤ Various commands.


; NOTES:
; - This map shows a 'comfort' Colemak with VK_102 in the middle (the '_' key). See below.
;    * The remaps should be by scan codes though, so the positions are layout independent!
;    * Since PKL currently doesn't remap scan codes, the Extend must be remapped instead.
;    * For now, select between different [extend] sections below by renaming the sections.
; - Multiple extended mappings would've been nice; this setup is a general/basic one.
;    * For instance, accelerated nav/mousing, NumPad/maths, mirroring, coder's toolbox...
; - If your layout doesn't define the key, 'extend' won't work with it!
;    * Solution: Put, e.g., 'SC039 = SPACE	VirtualKey' etc in your layout .ini file.
;    * You'll need at least Escape/Space/Return/Back and F1-F12 for full functionality.
; - The Tab key is currently a poor candidate for remapping because of problems with AltTab.
;    * It might be useable as another extensor/modifier though? (Probably best left alone.)
; - My WARS = modifier block idea didn't work because R cannot map a modifier! A bug?!
;    * (I believe the hardware scan matrix has CapsLock on the same column as the R key...)
;    * R can map non-modifiers, so I settled for another solution for now: The mouse wheel.
;    * My preferred way would have browsing/modifiers more ergonomically/logically placed:
;+------+------+------+------+------+------+------+------+------+------+------+------+------+
;|Tab   |Q ¤¤¤ |W <<> |F <>> |P *** |G *** |J ### |L ### |U ### |Y ### |; ¤¤¤ |[ ¤¤¤ |] ¤¤¤ |
;|      | Esc  | BrBck| BrFwd| *WhUp| *Btn1| PgUp | Home | Up   | End  | Del  | Esc  | Ins  |
;+------+------+------+------+------+------+------+------+------+------+------+------+------+
;|Caps+ |A +++ |R +++ |S +++ |T *** |D *** |H ### |N ### |E ### |I ### |O ¤¤¤ |' ¤¤¤ |\ ><> |
;| ++++ | Alt  | Ctrl | Shift| *WhDn| *Up17| PgDn | Left | Down | Right| Back | Apps | BrFav|
;+------+------+------+------+------+------+------+------+------+------+------+------+------+
; - A Win key wouldn't be very useful here since nearly all Win hotkeys use letters/nums.
;    * It might be wanted because of Win-F1/F3, Win-Break and the Start menu?
;    * Tip: T+Q (Ctrl-Esc) shows the Start menu too. Win-Help/Win-Search are on that menu.
; - Tech note: The mappings are on the form Send {Blind}{%YourMapping%} (see the AHK Help).
;    * Thus, if you want, say, a modified keypress you can use, e.g., '}#r{' or '}^{Left'.
; - There isn't a sendable Undo key per se, oddly enough. (But Ctrl+Z isn't a hard reach.)
;    * However, A+O (Alt-Back) = Undo (http://www.geocities.com/ian_springer/winkey.html).
;    * Actually, it'd be nice to be able to Send any APPCOMMAND_ message but AHK doesn't...
;    * APPCOMMAND candidates: UNDO/REDO, NEW/OPEN/CLOSE, PRINT...
; - Mapping something to the Sleep or Power key doesn't seem to do a lot on most computers?
; - The Pause and CtrlBreak are usually both on the same physical key, which is a bit weird.
;    * Using Pause, Win+Enter is System Properties.
;    * Actually, both Pause/Break and SysRq/PrntScrn send their codes strangely.
;    * Hence, I didn't remap any of them to avoid trouble.
; - The AppsKey and Btn2 may seem to do the same, but the menu appears in different places.
; - Mapping Del or Back (or something else?) to the ` key was a bit of a toss-up.
;    * For instance, use S+` (Shift-Del) to delete a file bypassing the Recycle Bin.
;    * The Back key is handy when navigating - but that's 2-handed work anyway.

; TIPS:
; - These mappings enable you to do many things without leaving the typing home position.
;    * Mappings are based on ease of reach vs. usefulness, and some left-hand-only use.
; - This could take some getting used to for the left pinky, but it gets really cool!!!
; - Caps+Esc turns the CapsLock state on and off now.
; - It's handy to control your browser back/forward with the left hand only while browsing.
; - Similarly, the wheel up/down keys are favorites.
; - Space for Enter is also nice; can be worked with left-hand-only as well.
;    * To press dialogue buttons for instance, use Tab to move and Space/Q to select/abort.
;    * A+Space (=Alt+Enter) when a file/disk is selected, brings up the object's Properties.
; - Use Apps (or *Btn2) for context menus; arrows, 'mousing' or shortcuts select items.
; - Esc mapped to '[' (Telnet/Vim/etc compliant) is okay, but a left-hand one is even better.
; - The left-hand Del key is also convenient; the right-hand one is best when editing.
; - Cut/Copy/Paste are Windows 'multimedia board' versions - should work mostly anywhere.
; - Using S/T (Shift/cTrl) with the UNEI/LY/O' keys you can jump words, jump/select, etc.
; - The number keys are mapped to function keys. They are reachable with the left hand!
;    * A4 closes apps; Win+3 GUI-searches; try 1(Help)/2(Rename)/3(Find)/5(Refresh) too.
; - The function keys are mapped to multimedia keys like the ones on multimedia keyboards.
;    * Browser_Stop/Refresh/Search are usually covered by hotkeys (e.g., Esc/F5/^F).
;    * Browser_Favorites usually needs a menu choice, so that's included (near the arrows).
; - The App1/2 keys are defined in the registry, in ShellExecute (REG_SZ) values:
;    * HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AppKey\17
;    * HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AppKey\18
;    * You could also do user-specific ones in HKEY_CURRENT_USER (might have to create them).
;    * Usually though, I find that the defaults of Explorer (App1) and Calc (App2) are fine.
;    * The Mail one lies in AppKey\15, Media in 16, and Browser in 7. Can change those too.
; - Wheel Up/Dn are nice for scrolling windows/bars; Wheel Left/Right for horizontal scroll.
;    * Horizontal scrolling doesn't always work though, at least not before Windows Vista.
; - The 'virtual mousing' is rudimentary; a 'last resort' when arrows/Tab aren't enough.
;    * The 'mousing cross' is placed similarly to the 'mouse stick' on some boards.
;    * A mousing resolution of 17 pixels roughly fits *most* context and similiar menus.
;    * A full mouse layout could have multi-resolution, diagonals, Btn4/Btn5 and sticky Btn1.
;    * The keyboard's auto-repeat makes virtual mousing odd/'laggy' when a key is held down.
;    * In particular, beware of holding down the *Btn key(s) for a 'rapid-click' effect.


[extend]
; *** SPACE/ /INS/DEL/HOME/END/PGUP/PGDN/ /LEFT/UP/DN/RIGHT
SC039 = Enter

SC152 = }!d{BS}http://{
;SC153 = ScrollLock
SC147 = Click Rel -128,0,0
SC14f = Click Rel 128,0,0
;SC149 = PgUp 3
;SC151 = PgDn 3
SC149 = Click Rel 0,-128,0
SC151 = Click Rel 0,128,0

;SC14b = Left 6
;SC148 = Up 6
;SC150 = Down 6
;SC14d = Right 6

; *** PrtScr/SysRq[=!PrtScr]/ScrlLock/Pause[strange!]/Break/ /Menu/Power/Sleep/Wake
;SC137 = PrtScr
;SC054 = SysRq
;SC046 = ScrollLock
;SC045 = Pause
;SC146 = CtrlBreak

;SC15d = Menu
;SC15e = Power
;SC15f = Sleep
;SC163 = Wake

; *** ESC/F1-F12
SC001 = CapsLock
SC03b = Media_Play_Pause
SC03c = Media_Prev
SC03d = Media_Next
SC03e = Media_Stop
SC03f = Volume_Mute
SC040 = Volume_Down 2
SC041 = Volume_Up 2
SC042 = Launch_Media
SC043 = Esc}{Browser_Home
SC044 = Launch_Mail
SC057 = Launch_App1
SC058 = Launch_App2

; *** Row 1 (numbers/symbols - left side)
SC029 = Del
SC002 = F1
SC003 = F2
SC004 = F3
SC005 = F4
SC006 = F5
SC007 = F6

; *** Row 2 (upper letter row - left side)
SC00f = Tab
SC010 = Esc
SC011 = WheelUp 2
SC012 = Browser_Back
SC013 = Browser_Forward
SC014 = LButton

; *** Row 3 (home row - left side)
;SC03a = CapsLock 
SC01e = Alt
SC01f = WheelDown 2
SC020 = Shift
SC021 = Ctrl
SC022 = Click Rel 0,-17,0

; *** Row 4 (lower letter row - left side)
;SC02a = LShift
; ##### SEE THE [EXTRA] SECTION FOR OPTIONAL 'COMFORT' REGISTRY REMAPPING #####
; Non-registry-mapped 'comfort' layout - VK_102 in the lower left corner is used as 'Z'.
SC056 = }!{Backspace
SC02c = }+{Del
SC02d = }^{Ins
SC02e = }+{Ins
SC02f = Click Rel -17,0,0
SC030 = Click Rel 0,17,0
; ##### END OF 'COMFORT'/'NON-COMFORT' PART (PASTE BETWEEN THESE LINES) #######

; ***** FOR WIDE LAYOUTS WITH NON-REGISTRY-MAPPED BOARDS, PASTE/REPLACE FROM THIS LINE *****
; ***** Below are [extend] maps for WideISO layouts without registry remaps**
; *** Row 1 (numbers/symbols - right side)
SC008 = F7
SC009 = F8
SC00a = F9
SC00b = F10
SC00c = F11
SC00d = F12
SC00e = Sleep

; *** Row 2 (upper letter row - right side)
SC015 = Esc
SC016 = PgUp
SC017 = Home
SC018 = Up
SC019 = End
SC01a = Del
SC01b = Ins

; *** Row 3 (home row - right side)
SC023 = Browser_Favorites
SC024 = PgDn
SC025 = Left
SC026 = Down
SC027 = Right
SC028 = BackSpace
SC02b = AppsKey
SC01c = CtrlBreak

; *** Row 4 (lower letter row - right side)
SC031 = Click Rel 17,0,0
SC032 = MButton
SC033 = RButton
SC034 = WheelLeft
SC035 = WheelRight
;SC036 = RShift
; ***** FOR WIDE LAYOUTS WITH NON-REGISTRY-MAPPED BOARDS, PASTE/REPLACE TO THIS LINE *****


[extend_WideNonRegmapped]
; This section is just storage for the 'Wide' non-registry-remapped Extend mappings
; ***** Below are [extend] maps for WideISO layouts without registry remaps**
; *** Row 1 (numbers/symbols - right side)
SC008 = F7
SC009 = F8
SC00a = F9
SC00b = F10
SC00c = F11
SC00d = F12
SC00e = Sleep

; *** Row 2 (upper letter row - right side)
SC015 = Esc
SC016 = PgUp
SC017 = Home
SC018 = Up
SC019 = End
SC01a = Del
SC01b = Ins

; *** Row 3 (home row - right side)
SC023 = Browser_Favorites
SC024 = PgDn
SC025 = Left
SC026 = Down
SC027 = Right
SC028 = BackSpace
SC02b = AppsKey
SC01c = CtrlBreak

; *** Row 4 (lower letter row - right side)
SC031 = Click Rel 17,0,0
SC032 = MButton
SC033 = RButton
SC034 = WheelLeft
SC035 = WheelRight
;SC036 = RShift


[extend_nonWide]
; This section is just storage for the normal or Wide-registry-remapped Extend mappings
; ***** Below are default [extend] maps (non-Wide or WideISO Registry-mapped layouts) **
; *** Row 1 (numbers/symbols - right side)
SC008 = F7
SC009 = F8
SC00a = F9
SC00b = F10
SC00c = F11
SC00d = F12
SC00e = Sleep

; *** Row 2 (upper letter row - right side)
SC015 = PgUp
SC016 = Home
SC017 = Up
SC018 = End
SC019 = Del
SC01a = Esc
SC01b = Ins

; *** Row 3 (home row - right side)
SC023 = PgDn
SC024 = Left
SC025 = Down
SC026 = Right
SC027 = BackSpace
SC028 = AppsKey
SC02b = Browser_Favorites
SC01c = CtrlBreak

; *** Row 4 (lower letter row - right side)
SC031 = Click Rel 17,0,0
SC032 = MButton
SC033 = WheelLeft
SC034 = WheelRight
SC035 = RButton
;SC036 = RShift


[extend_WideregmappedKeepSetup]
; This section is just storage for the 'Wide' registry-remapped Extend mappings
;   if you want to keep the original key setup (no good for row 2/3, I think?!)
; ***** Below are [extend] maps for WideISO regmapped layouts **
; *** Row 1 (numbers/symbols - right side)
SC00d = F7
SC008 = F8
SC009 = F9
SC00a = F10
SC00b = F11
SC00c = F12
SC00e = Sleep

; *** Row 2 (upper letter row - right side)
SC01a = PgUp
SC015 = Home
SC016 = Up
SC017 = End
SC018 = Del
SC019 = Esc
SC035 = Ins

; *** Row 3 (home row - right side)
SC01b = PgDn
SC023 = Left
SC024 = Down
SC025 = Right
SC026 = BackSpace
SC027 = AppsKey
SC028 = Browser_Favorites
SC01c = CtrlBreak

; *** Row 4 (lower letter row - right side)
SC02b = Click Rel 17,0,0
SC031 = MButton
SC032 = RButton
SC033 = WheelLeft
SC034 = WheelRight
;SC036 = RShift


[extras]
; This section is not read by the program, but contains snippets for other sections.

; Mappings for scan code mapped versus unmapped 'comfort' layout (ZXCVB+VK_102 keys)
; (These keys may already be mapped on a lower level than PKL, by registry)
; Copy the appropriate set into your pkl.ini -> [extend] section (they're on row 4).

; Scancode/registry mapped 'comfort' layout - VK_102 now sits in the old 'B' position.
SC02c = }!{Backspace
SC02d = }+{Del
SC02e = }^{Ins
SC02f = }+{Ins
SC030 = Click Rel -17,0,0
SC056 = Click Rel 0,17,0

; Non-registry-mapped 'comfort' layout - VK_102 in the lower left corner is used as 'Z'.
SC056 = }!{Backspace
SC02c = }+{Del
SC02d = }^{Ins
SC02e = }+{Ins
SC02f = Click Rel -17,0,0
SC030 = Click Rel 0,17,0

; Non-registry-mapped 'non-comfort' layout - if you have no VK_102 key (or WANT pain?!).
; As of 2010, this is no longer fully supported and may require a tweak to work.
SC056 = MButton
SC02c = }!{Backspace
SC02d = }+{Del
SC02e = }^{Ins
SC02f = }+{Ins
SC030 = Click Rel 0,17,0
SC031 = Click Rel -17,0,0
SC032 = Click Rel 17,0,0
; Instead of a mouse 'cross', there's now up/down and left/right pairs.
; If you need the middle button on an ANSI board, maybe replace an Esc or Del button?
