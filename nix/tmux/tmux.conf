# set prefix to be ctrl+t & unbind the default
set -g prefix C-t
unbind C-b
# and pass through to running application by pressing it twice
bind C-t send-prefix
# set the delay between prefix & command
set -s escape-time 1

set -g default-shell /usr/local/bin/zsh


bind -r C-t display "yourmum?"


# enable mouse
set -g mouse on


# trying ... and failing ... to get mouse scrolling in WSL
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M



# colour scheme stuff
# set default terminal mode to 256 colours
set -g default-terminal "screen-256color"
# command line
set -g message-style fg=white,bold,bg=blue
# pane borders
setw -g pane-border-style fg=yellow,bg=colour235
setw -g pane-active-border-style fg=white,bg=colour22
# shade out inactive panes
setw -g window-style fg=colour246,bg=colour235
setw -g window-active-style fg=white,bg=black
# status line colours
#setw -g status-style fg=black,bg=green # setting to default
setw -g status-style fg=white,bg=colour236 
#setw -g window-status-style fg=black,bg=colour28 # inactive window
setw -g window-status-style fg=white,bg=colour28 # inactive window
#setw -g window-status-current-style fg=white,bold,bg=red # active window
setw -g window-status-current-style fg=white,bold,bg=green # active window
# enable activity alerts for windows
setw -g monitor-activity on
set -g visual-activity on
setw -g window-status-activity-style fg=cyan,bold,bg=red
# status line content
set -g status-left-length 40
set -g status-left "#[fg=green][S:#S #[fg=yellow]W:#I #[fg=cyan]P:#P] "
set -g status-justify centre
# set -g status-right "#[fg=cyan]%d %b %R"
# set -g status-right "#{prefix-highlight} | #(~/.battery Discharging) | #[fg=cyan]%d %b %R"
set -g status-right "#{prefix_highlight} #[fg=black] #{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | #[fg=blue]%d %b %R "
#set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'
#set -g status-interval 60 # update the status every 60 mins

# prefix highlight plugin 
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_output_prefix '< '
set -g @prefix_highlight_output_suffix ' >'

# set window & pane indices to be 1-based rather than 0-based
set -g base-index 1
setw -g pane-base-index 1

# bind prefix r to re-source .tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded .tmux.conf"

# split panes with | and -
bind | split-window -h
bind - split-window -v
bind / split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Vim-esque navigation bindings
# navigate between panes with prefix hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# resize panes with prefix HJKL ( -r flag allows repeating without prefix )
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# navigate between windows with prefix ctrl+h / ctrl+l
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
#### Set up vim-tmux-navigator
## install the Vim plugin using Vundle by adding this to your .vimrc file:
## Plugin 'christoomey/vim-tmux-navigator'
## Then save your .vimrc file and run :PluginInstall
## in Vim to install the plugin.
#### Add this tmux config
## is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
## bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L" 
## bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D" 
## bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U" 
## bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R" 
## bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
## bind C-l send-keys 'C-l'

# enable vim keys for copy mode navigation
setw -g mode-keys vi
# prefix ESC to enter copy mode, y to yank in copy mode, prefix p to paste
bind Escape copy-mode
#bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel
unbind p
bind p paste-buffer

# OS-specific config - integrating system clipboards for OSX / Linux
if-shell "uname | grep -q Darwin" "source-file ~/dotfiles/nix/tmux/tmux.mac.conf" "source-file ~/dotfiles/nix/tmux/tmux.linux.conf" 


# TPM package setup
set -g @plugin 'tmux-plugins/tpm'
# hmmm, seems a bit pointless...
# # PF + Tab / PF + Backspace - toggle sidebar directory tree
# set -g @plugin 'tmux-plugins/tmux-sidebar'

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-battery'

# start it up...
run '~/.tmux/plugins/tpm/tpm'
